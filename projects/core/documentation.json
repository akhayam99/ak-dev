{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => BUTTON_COLORS"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/palette/palette.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/radio/radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/spinner/spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/toggle/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "InputCustomBefore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  template: `\n    <ak-input [size]=\"md\" [value]=\"'Amin'\">\n      <div before-input> X </div>\n    </ak-input>\n  `,\n})"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/palette/palette.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PaletteComponent>",
                "defaultValue": "{\n  title: 'Palette',\n  component: PaletteComponent,\n  tags: ['autodocs'],\n  argTypes: {},\n  args: {},\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Action/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'The text to display on the button'\n    },\n    onClick: {\n      action: 'clicked',\n      description: 'The action to perform when the button is clicked'\n    },\n    color: {\n      control: 'select',\n      options: ['', ...(akTheme.colorKeys as string[])],\n      description: 'The color of the button'\n    },\n    role: {\n      control: 'select',\n      options: ['', ...(akTheme.roleKeys as string[])],\n      description: 'The role of the button (overrides color)'\n    },\n    status: {\n      control: 'select',\n      options: ['', ...(akTheme.statusKeys as string[])],\n      description: 'The status of the button (overrides color and role)'\n    },\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large'],\n      description: 'The size of the button'\n    },\n    variant: {\n      control: 'radio',\n      options: ['filled', 'outlined', 'ghost'],\n      description: 'The variant of the button'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Whether the button is in a loading state'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether the button is disabled'\n    },\n    fullWidth: {\n      control: 'boolean',\n      description: 'Whether the button should take up the full width of its container'\n    }\n  },\n  args: {\n    label: 'BUTTON',\n    size: 'medium',\n    variant: 'filled',\n    loading: false,\n    disabled: false,\n    fullWidth: false,\n    color: 'blue',\n    role: '',\n    status: '',\n    onClick: (() => console.log('Clicked'))\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\n  title: 'Input/Checkbox',\n  component: CheckboxComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'radio',\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the checkbox'\n    },\n    value: {\n      control: 'boolean',\n      description: 'The value of the checkbox'\n    },\n    indeterminate: {\n      control: 'boolean',\n      description: 'The indeterminate state of the checkbox'\n    },\n    label: {\n      control: 'text',\n      description: 'The label of the checkbox'\n    },\n    labelPosition: {\n      control: 'radio',\n      options: ['left', 'right'],\n      description: 'The position of the label'\n    },\n    color: {\n      control: 'select',\n      options: ['', ...(akTheme.colorKeys as string[])],\n      description: 'The color of the button'\n    },\n    role: {\n      control: 'select',\n      options: ['', ...(akTheme.roleKeys as string[])],\n      description: 'The role of the button (overrides color)'\n    },\n    status: {\n      control: 'select',\n      options: ['', ...(akTheme.statusKeys as string[])],\n      description: 'The status of the button (overrides color and role)'\n    },\n    onChange: {\n      action: 'onChange',\n      description: 'The event emitted when the checkbox value changes'\n    }\n  },\n  args: {\n    size: 'md',\n    value: false,\n    indeterminate: false,\n    label: 'I am a checkbox',\n    labelPosition: 'right',\n    color: 'blue',\n    role: '',\n    status: '',\n    onChange: (event) => console.log(\"Checkbox value: \", event),\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\n  title: 'Input/Input',\n  component: InputComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the button'\n    },\n  },\n  args: {\n    size: 'md',\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/radio/radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioComponent>",
                "defaultValue": "{\n  title: 'Input/Radio',\n  component: RadioComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'radio',\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the radio'\n    },\n    value: {\n      control: 'boolean',\n      description: 'The value of the radio'\n    },\n    label: {\n      control: 'text',\n      description: 'The label of the radio'\n    },\n    labelPosition: {\n      control: 'radio',\n      options: ['left', 'right'],\n      description: 'The position of the label'\n    },\n    color: {\n      control: 'select',\n      options: ['', ...(akTheme.colorKeys as string[])],\n      description: 'The color of the button'\n    },\n    role: {\n      control: 'select',\n      options: ['', ...(akTheme.roleKeys as string[])],\n      description: 'The role of the button (overrides color)'\n    },\n    status: {\n      control: 'select',\n      options: ['', ...(akTheme.statusKeys as string[])],\n      description: 'The status of the button (overrides color and role)'\n    },\n    onChange: {\n      action: 'onChange',\n      description: 'The event emitted when the radio value changes'\n    }\n  },\n  args: {\n    size: 'md',\n    value: false,\n    label: 'I am a radio',\n    labelPosition: 'right',\n    color: 'blue',\n    role: '',\n    status: '',\n    onChange: (event) => console.log(\"Radio value: \", event),\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectComponent>",
                "defaultValue": "{\n  title: 'Input/Select',\n  component: SelectComponent,\n  tags: ['autodocs'],\n  argTypes: {\n\n  },\n  args: {\n\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/spinner/spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SpinnerComponent>",
                "defaultValue": "{\n  title: 'Feedback/Spinner',\n  component: SpinnerComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'range',\n      min: 8,\n      max: 80,\n      description: 'The size of the spinner in pixels. [8 - 80]'\n    },\n    color: {\n      control: 'select',\n      options: ['', ...(akTheme.colorKeys as string[])],\n      description: 'The color of the spinner'\n    },\n  },\n  args: {\n    color: 'blue',\n    size: 14,\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/toggle/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToggleComponent>",
                "defaultValue": "{\n  title: 'Input/Toggle',\n  component: ToggleComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'The label of the toggle'\n    },\n    labelPosition: {\n      control: 'radio',\n      options: ['left', 'right'],\n      description: 'The position of the label'\n    },\n    color: {\n      control: 'select',\n      options: akTheme.colorKeys,\n      description: 'The color of the toggle'\n    },\n    size: {\n      control: 'radio',\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the toggle'\n    },\n    value: {\n      control: 'boolean',\n      description: 'The value of the toggle'\n    },\n    showIO: {\n      control: 'boolean',\n      description: 'Whether to show the on/off labels'\n    },\n    onChange: {\n      action: 'changed',\n      description: 'The action to perform when the toggle is changed'\n    },\n  },\n  args: {\n    label: 'I am a label',\n    labelPosition: 'right',\n    color: 'blue',\n    size: 'md',\n    value: false,\n    showIO: false,\n    onChange: (event) => console.log(\"Toggle value: \", event),\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Roles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => BUTTON_ROLES"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => BUTTON_SIZES"
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => BUTTON_STATUS"
            },
            {
                "name": "Variant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => BUTTON_VARIANTS"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PaletteComponent>",
                "file": "projects/core/src/palette/palette.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioComponent>",
                "file": "projects/core/src/lib/components/radio/radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "projects/core/src/lib/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SpinnerComponent>",
                "file": "projects/core/src/lib/components/spinner/spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleComponent>",
                "file": "projects/core/src/lib/components/toggle/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/core/src/lib/components/button/button.stories.ts": [
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => BUTTON_COLORS"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Action/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'The text to display on the button'\n    },\n    onClick: {\n      action: 'clicked',\n      description: 'The action to perform when the button is clicked'\n    },\n    color: {\n      control: 'select',\n      options: ['', ...(akTheme.colorKeys as string[])],\n      description: 'The color of the button'\n    },\n    role: {\n      control: 'select',\n      options: ['', ...(akTheme.roleKeys as string[])],\n      description: 'The role of the button (overrides color)'\n    },\n    status: {\n      control: 'select',\n      options: ['', ...(akTheme.statusKeys as string[])],\n      description: 'The status of the button (overrides color and role)'\n    },\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large'],\n      description: 'The size of the button'\n    },\n    variant: {\n      control: 'radio',\n      options: ['filled', 'outlined', 'ghost'],\n      description: 'The variant of the button'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Whether the button is in a loading state'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether the button is disabled'\n    },\n    fullWidth: {\n      control: 'boolean',\n      description: 'Whether the button should take up the full width of its container'\n    }\n  },\n  args: {\n    label: 'BUTTON',\n    size: 'medium',\n    variant: 'filled',\n    loading: false,\n    disabled: false,\n    fullWidth: false,\n    color: 'blue',\n    role: '',\n    status: '',\n    onClick: (() => console.log('Clicked'))\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n\n}"
                },
                {
                    "name": "Roles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => BUTTON_ROLES"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => BUTTON_SIZES"
                },
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => BUTTON_STATUS"
                },
                {
                    "name": "Variant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => BUTTON_VARIANTS"
                }
            ],
            "projects/core/src/palette/palette.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/palette/palette.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/palette/palette.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PaletteComponent>",
                    "defaultValue": "{\n  title: 'Palette',\n  component: PaletteComponent,\n  tags: ['autodocs'],\n  argTypes: {},\n  args: {},\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
                }
            ],
            "projects/core/src/lib/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\n  title: 'Input/Checkbox',\n  component: CheckboxComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'radio',\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the checkbox'\n    },\n    value: {\n      control: 'boolean',\n      description: 'The value of the checkbox'\n    },\n    indeterminate: {\n      control: 'boolean',\n      description: 'The indeterminate state of the checkbox'\n    },\n    label: {\n      control: 'text',\n      description: 'The label of the checkbox'\n    },\n    labelPosition: {\n      control: 'radio',\n      options: ['left', 'right'],\n      description: 'The position of the label'\n    },\n    color: {\n      control: 'select',\n      options: ['', ...(akTheme.colorKeys as string[])],\n      description: 'The color of the button'\n    },\n    role: {\n      control: 'select',\n      options: ['', ...(akTheme.roleKeys as string[])],\n      description: 'The role of the button (overrides color)'\n    },\n    status: {\n      control: 'select',\n      options: ['', ...(akTheme.statusKeys as string[])],\n      description: 'The status of the button (overrides color and role)'\n    },\n    onChange: {\n      action: 'onChange',\n      description: 'The event emitted when the checkbox value changes'\n    }\n  },\n  args: {\n    size: 'md',\n    value: false,\n    indeterminate: false,\n    label: 'I am a checkbox',\n    labelPosition: 'right',\n    color: 'blue',\n    role: '',\n    status: '',\n    onChange: (event) => console.log(\"Checkbox value: \", event),\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
                }
            ],
            "projects/core/src/lib/components/input/input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "InputCustomBefore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  template: `\n    <ak-input [size]=\"md\" [value]=\"'Amin'\">\n      <div before-input> X </div>\n    </ak-input>\n  `,\n})"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\n  title: 'Input/Input',\n  component: InputComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the button'\n    },\n  },\n  args: {\n    size: 'md',\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
                }
            ],
            "projects/core/src/lib/components/radio/radio.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/radio/radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/radio/radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioComponent>",
                    "defaultValue": "{\n  title: 'Input/Radio',\n  component: RadioComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'radio',\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the radio'\n    },\n    value: {\n      control: 'boolean',\n      description: 'The value of the radio'\n    },\n    label: {\n      control: 'text',\n      description: 'The label of the radio'\n    },\n    labelPosition: {\n      control: 'radio',\n      options: ['left', 'right'],\n      description: 'The position of the label'\n    },\n    color: {\n      control: 'select',\n      options: ['', ...(akTheme.colorKeys as string[])],\n      description: 'The color of the button'\n    },\n    role: {\n      control: 'select',\n      options: ['', ...(akTheme.roleKeys as string[])],\n      description: 'The role of the button (overrides color)'\n    },\n    status: {\n      control: 'select',\n      options: ['', ...(akTheme.statusKeys as string[])],\n      description: 'The status of the button (overrides color and role)'\n    },\n    onChange: {\n      action: 'onChange',\n      description: 'The event emitted when the radio value changes'\n    }\n  },\n  args: {\n    size: 'md',\n    value: false,\n    label: 'I am a radio',\n    labelPosition: 'right',\n    color: 'blue',\n    role: '',\n    status: '',\n    onChange: (event) => console.log(\"Radio value: \", event),\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
                }
            ],
            "projects/core/src/lib/components/select/select.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectComponent>",
                    "defaultValue": "{\n  title: 'Input/Select',\n  component: SelectComponent,\n  tags: ['autodocs'],\n  argTypes: {\n\n  },\n  args: {\n\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
                }
            ],
            "projects/core/src/lib/components/spinner/spinner.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/spinner/spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/spinner/spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SpinnerComponent>",
                    "defaultValue": "{\n  title: 'Feedback/Spinner',\n  component: SpinnerComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      control: 'range',\n      min: 8,\n      max: 80,\n      description: 'The size of the spinner in pixels. [8 - 80]'\n    },\n    color: {\n      control: 'select',\n      options: ['', ...(akTheme.colorKeys as string[])],\n      description: 'The color of the spinner'\n    },\n  },\n  args: {\n    color: 'blue',\n    size: 14,\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n\n}"
                }
            ],
            "projects/core/src/lib/components/toggle/toggle.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/toggle/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/toggle/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToggleComponent>",
                    "defaultValue": "{\n  title: 'Input/Toggle',\n  component: ToggleComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'The label of the toggle'\n    },\n    labelPosition: {\n      control: 'radio',\n      options: ['left', 'right'],\n      description: 'The position of the label'\n    },\n    color: {\n      control: 'select',\n      options: akTheme.colorKeys,\n      description: 'The color of the toggle'\n    },\n    size: {\n      control: 'radio',\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the toggle'\n    },\n    value: {\n      control: 'boolean',\n      description: 'The value of the toggle'\n    },\n    showIO: {\n      control: 'boolean',\n      description: 'Whether to show the on/off labels'\n    },\n    onChange: {\n      action: 'changed',\n      description: 'The action to perform when the toggle is changed'\n    },\n  },\n  args: {\n    label: 'I am a label',\n    labelPosition: 'right',\n    color: 'blue',\n    size: 'md',\n    value: false,\n    showIO: false,\n    onChange: (event) => console.log(\"Toggle value: \", event),\n  },\n  decorators: [componentWrapperDecorator(StorybookThemeDecorator)],\n}"
                }
            ],
            "projects/core/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/core/src/palette/palette.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PaletteComponent>",
                    "file": "projects/core/src/palette/palette.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/core/src/lib/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/core/src/lib/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/core/src/lib/components/input/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/core/src/lib/components/radio/radio.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioComponent>",
                    "file": "projects/core/src/lib/components/radio/radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/core/src/lib/components/select/select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "projects/core/src/lib/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/core/src/lib/components/spinner/spinner.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SpinnerComponent>",
                    "file": "projects/core/src/lib/components/spinner/spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/core/src/lib/components/toggle/toggle.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleComponent>",
                    "file": "projects/core/src/lib/components/toggle/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/core/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Roles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Status",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputCustomBefore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/radio/radio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/radio/radio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/spinner/spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/spinner/spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/toggle/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/toggle/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/palette/palette.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/palette/palette.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}